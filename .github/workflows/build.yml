name: Build all
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: windows-2022
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1
      
      # Build RpcClient
      - name: Restore dependencies RpcClient
        run: msbuild RpcClient/RpcClient.sln /t:Restore
        shell: pwsh
      
      - name: Build RpcClient
        run: msbuild RpcClient/RpcClient.sln /p:Configuration=Release
        shell: pwsh
      
      # Upload RpcClient artifacts
      - name: Upload RpcClient artifacts
        uses: actions/upload-artifact@v3
        with:
          name: RpcClient
          path: RpcClient/bin/Release/*
      
      # Build SprintCSP
      - name: Restore dependencies SprintCSP
        run: msbuild SprintCSP/SprintCSP.sln /t:Restore
        shell: pwsh
      
      - name: Build SprintCSP
        run: msbuild SprintCSP/SprintCSP.sln /p:Configuration=Release
        shell: pwsh
      
      # Upload SprintCSP artifacts
      - name: Upload SprintCSP artifacts
        uses: actions/upload-artifact@v3
        with:
          name: SprintCSP
          path: SprintCSP/bin/Release/*
      
      # Create a release with auto-tagging (only on push to main)
      - name: Generate release tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: tag
        run: |
          $date = Get-Date -Format "yyyy.MM.dd"
          $count = (git tag -l "v$date.*" | Measure-Object).Count
          $newTag = "v$date.$count"
          echo "tag=$newTag" >> $env:GITHUB_OUTPUT
        shell: pwsh
      
      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
      
      # Zip RpcClient output
      - name: Zip RpcClient
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: Compress-Archive -Path RpcClient/bin/Release/* -DestinationPath RpcClient.zip
        shell: pwsh
      
      # Zip SprintCSP output
      - name: Zip SprintCSP
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: Compress-Archive -Path SprintCSP/bin/Release/* -DestinationPath SprintCSP.zip
        shell: pwsh
      
      # Upload zipped files to the release
      - name: Upload Release Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          files: |
            RpcClient.zip
            SprintCSP.zip
          token: ${{ secrets.GITHUB_TOKEN }}
