name: Build all

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-2022  # Use a Windows runner with Visual Studio 2022

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up MSBuild for Visual Studio 2022
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1

      # Restore dependencies
      - name: Restore dependencies
        run: msbuild RpcClient/RpcClient.sln /t:Restore
        shell: pwsh

      # Build the solution
      - name: Build solution
        run: msbuild RpcClient/RpcClient.sln /p:Configuration=Release
        shell: pwsh

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: RpcClient
          path: |
            RpcClient/**/Release/*

      # Restore dependencies
      - name: Restore dependencies
        run: msbuild SprintCSP/SprintCSP.sln /t:Restore
        shell: pwsh

      # Build the solution
      - name: Build solution
        run: msbuild SprintCSP/SprintCSP.sln /p:Configuration=Release
        shell: pwsh

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: SprintCSP
          path: |
            SprintCSP/**/Release/*


      # Create a GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v1.0.0'  # Change this as needed
          release_name: 'Release v1.0.0'
          draft: false
          prerelease: false

      # Upload artifacts to the release
      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $files = Get-ChildItem -Path */**/Release/*.zip
          foreach ($file in $files) {
            Write-Host "Uploading $file..."
            gh release upload ${{ steps.create_release.outputs.upload_url }} $file.FullName --clobber --repo $GITHUB_REPOSITORY
          }
        shell: pwsh
