name: Build all
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: windows-2022
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1
      
      # Build RpcClient
      - name: Restore dependencies RpcClient
        run: msbuild RpcClient/RpcClient.sln /t:Restore
        shell: pwsh
      
      - name: Build RpcClient
        run: msbuild RpcClient/RpcClient.sln /p:Configuration=Release
        shell: pwsh
      
      # Build SprintCSP
      - name: Restore dependencies SprintCSP
        run: msbuild SprintCSP/SprintCSP.sln /t:Restore
        shell: pwsh
      
      - name: Build SprintCSP
        run: msbuild SprintCSP/SprintCSP.sln /p:Configuration=Release
        shell: pwsh
      
      # Upload artifacts directly from correct paths
      - name: Upload RpcClient
        uses: actions/upload-artifact@v4
        with:
          name: RpcClient
          path: RpcClient/x64/Release/RpcClient.exe
          
      - name: Upload SprintCSP
        uses: actions/upload-artifact@v4
        with:
          name: SprintCSP
          path: SprintCSP/x64/Release/SprintCSP.dll
      
      # Create release with correct file paths
      - name: Create Release and Upload Files
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Generate tag (vYYYY.MM.DD.N)
          $date = Get-Date -Format "yyyy.MM.dd"
          $count = (git tag -l "v$date.*" | Measure-Object).Count
          $newTag = "v$date.$count"
          
          # Create release with the compiled files
          gh release create $newTag "./RpcClient/x64/Release/RpcClient.exe" "./SprintCSP/x64/Release/SprintCSP.dll" --title "Release $newTag" --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
